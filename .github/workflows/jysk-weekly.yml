name: JYSK monitor (weekly)

on:
  schedule:
    - cron: "0 21 * * 0"   # Sunday 22:00 Africa/Casablanca ≈ 21:00 UTC
  workflow_dispatch: {}

jobs:
  run-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- PROVE which code is running ---
      - name: Show revision + app markers
        run: |
          echo "HEAD SHA: $(git rev-parse HEAD)"
          echo "Has _apply_env_overrides: $(grep -c '_apply_env_overrides' app.py || true)"
          echo "Has env log line: $(grep -c 'Using TELEGRAM_BOT_TOKEN from environment' app.py || true)"
          python - << 'PY'
          import pathlib
          s = pathlib.Path("app.py").read_text(encoding="utf-8", errors="ignore")
          print("ENV_OVERRIDE_PRESENT:", ("os.getenv" in s and "TELEGRAM_BOT_TOKEN" in s))
          PY

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Import products
        run: python app.py import-csv products.csv

      # --- PROVE secrets & Telegram work ---
      - name: Telegram test ping
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -e
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            --data-urlencode "text=✅ Actions test ping $(date -u +'%F %T UTC')" \
          | python - <<'PY'
          import sys, json
          resp=json.load(sys.stdin)
          print("Telegram OK:", resp.get("ok"), "desc:", resp.get("description"))
          PY

      - name: Run monitor once
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python app.py run-once

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: |
            debug_*.png
            debug_*.html
          if-no-files-found: ignore
